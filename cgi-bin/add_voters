#!@PERL@

use strict;
use warnings;

use lib '@CGIBINDIR@';
use civs_common;
use CGI qw(:standard);
use Digest::MD5 qw(md5_hex);
use DB_File;

use Socket;
use IO::Handle;
use election;

my $thisurl = $civs_bin_path."/add_voters@PERLEXT@";

my $activate_url = "@PROTO@://".$thishost.$civs_bin_path."/opt_in@PERLEXT@";
my $mail_mgmt_url = "@PROTO@://".$thishost.$civs_bin_path."/mail_mgmt@PERLEXT@";

my $new_addresses = param('new_addresses');
my $new_addresses_file = upload('new_addresses_file');
if (defined($new_addresses_file)) {
    while (<$new_addresses_file>) {
    	$new_addresses .= $_;
    }
}
my @new_addresses = split /[\r\n]+/, $new_addresses;

HTML_Header($tx->CIVS_Adding_Voters, 'add_voters.js');
CIVS_Header($tx->Adding_voters);

my $control_key = param('key');    
CheckControlKey($control_key);
my $authorization_key = param('akey');
CheckAuthorizationKeyForAddingVoter($authorization_key);

if (!IsStarted || IsStopped) {
    print h1($tx->Error),
	p($tx->Sorry_voters_can_only_be_added_to_poll_in_progress);
    exit 0;
}

if ($#new_addresses >= @MAX_VOTER_ADD@) {
    print h1($tx->Error), p($tx->Too_many_voters_added);
    exit 0;
}
if (GetEmailLoad(time()) >= @MAX_EMAIL_LOAD@) {
    print h1($tx->Error), p($tx->Too_much_email);
    exit 0;
}

GetPrivateHostID;

# Send all of the voters their keys
my @mail_failures = @{SendKeys($authorization_key, \@new_addresses)};

print $tx->Total_of_x_voters_authorized($num_auth), $cr;

if ($#mail_failures >= 0) {
    print p($tx->see_the_failure_table($activate_url, $mail_mgmt_url)), $cr;
}

my $url = "$civs_bin_path/control@PERLEXT@?id=$election_id&key=$control_key";
$url .= "&akey=$authorization_key" if defined($authorization_key);
print p("<a href=\"$url\">", $tx->Go_back_to_poll_control, '</a>'), $cr;

if ($#mail_failures >= 0) {
    my @rows = Tr(th('Address'), th('Reason'));
    foreach my $rowref (@mail_failures) {
        my ($failure_type, $addr) =  @{$rowref};
        push @rows, Tr(td($addr), td($tx->mail_failure_reason($failure_type, $addr)));
    }
    print div({-class => "centering"}, div({-id => 'mail_failures'},
        button(-id => 'download_failures', -value => $tx->download_failures,
                -onclick => 'export_failure_table()'),
        table({-id => 'failure_table'}, @rows)));
}

print end_html();
Log("$num_auth new voters added to $title ($election_id)");

exit 0;
