#!/bin/bash

TestAndCreateDir() {
  if [ ! -d "$1" ]; then
    #echo "Directory $1 does not exist. Creating it.";
    mkdir "$1";
  fi
}


settings_file="$1"

if test $# -ne 1
then
  echo "--- ERROR: no settings file provided";
  echo "--- Usage: install-civs <settings-file>";
  exit 1
fi

# shellcheck source=/dev/null
. "$settings_file" || exit 1
echo "Read settings file."

if test -z "$ADMIN_KEY"
then
  echo "ERROR: Must define $ADMIN_KEY in $settings_file to be something secret."
  exit 1
fi

make -s gettimeofday timeout lockserv

TestAndCreateDir "$HTMLDIR";
TestAndCreateDir "$CGIBINDIR";
TestAndCreateDir "$CIVSDATADIR";
TestAndCreateDir "$CIVSDATADIR/elections";

rm "$CIVSDATADIR/elections/admission_control" "$CIVSDATADIR/lockserv"

for f in civs_create.html* index.html* public_elections.html*                   \
         proportional.html* sec_priv.html* acks.html changelog.html* news.html* \
         *.var rp.html* publicized_polls.html* faq.html* style.css results.js   \
         vote.js ajax.js ezdom.js civs_hdr.js mail_mgmt.js hebrew.css
do
  case "$f" in
    *.var)    dest="${HTMLDIR}/${f}";;
    *.html.*) dest="${HTMLDIR}/${f}${UTF8_SUFFIX}";;
    *.html)   dest="${HTMLDIR}/${f}${EN_SUFFIX}";;
    *)        dest="${HTMLDIR}/${f}";;
  esac
  echo "copying $f to $dest"
  sed  -e "s|@PERL@|$PERL|g" \
       -e "s|@CGIBINDIR@|$CGIBINDIR|g"\
       -e "s|@PROTO@|$PROTO|g" \
       -e "s|@THISHOST@|$THISHOST|g" \
       -e "s|@CIVSDATADIR@|$CIVSDATADIR|g" \
       -e "s|@CIVSBINURL@|$CIVSBINURL|g" \
       -e "s|@CIVSURL@|$CIVSURL|g" \
       -e "s|@CIVSHOME@|$CIVSHOME|g" \
       -e "s|@SUPERVISOR@|$SUPERVISOR|g" \
       -e "s|@AUTH_SENDER@|$AUTH_SENDER|g" \
       -e "s|@ADMIN_KEY@|$ADMIN_KEY|g" \
       -e "s|@SMTP_HOST@|$SMTP_HOST|g" \
       -e "s|@SMTP_PORT@|$SMTP_PORT|g" \
       -e "s|@SMTP_USE_SSL@|$SMTP_USE_SSL|g" \
       -e "s|@SMTP_AUTH_USER@|$SMTP_AUTH_USER|g" \
       -e "s|@SMTP_AUTH_PASSWD@|$SMTP_AUTH_PASSWD|g" \
       -e "s|@LOCALDEBUG@|$LOCALDEBUG|g" \
       -e "s|@ADDTOPATH@|$ADDTOPATH|g" \
       -e "s|@PERLEXT@|$PERLEXT|g" \
       -e "s|@USING_ISA@|$USING_ISA|g" \
       -e "s|@FILTER_TAGS@|$FILTER_TAGS|g" \
       -e "s|@MAX_VOTER_ADD@|$MAX_VOTER_ADD|g" \
       -e "s|@MAX_EMAIL_LOAD@|$MAX_EMAIL_LOAD|g" \
       -e "s|@MAX_IMAGE_SIZE@|$MAX_IMAGE_SIZE|g" \
       -e "s|@LOG_HOME_VISITS@|$LOG_HOME_VISITS|g" \
       -e "s|@SUGGESTION_BOX@|$SUGGESTION_BOX|g" \
       -e "s|@DONATE_URL@|$DONATE_URL|g" \
       -e "s|@UTF8_SUFFIX@|$UTF8_SUFFIX|g" \
       < "$f" > "$dest"
done

echo -n "copying:"
for f in add_voters beatpath.pm beatpath2.pm civs_common.pm                 \
         voting.pm close control create_election download_ballots           \
         remove_writein upload_ballots results top_polls.pm get_top_polls   \
         languages.pm election.pm mail.pm start_election vote               \
         refresh_top_polls mail_mgmt publicize_election status clear_caches \
         delete_election.pl edit_poll remove_defunct_elections              \
         request_deactivation                                               \
         resend_link send_result_key.pm rp.pm runoff.pm minimax.pm          \
         admctrl.pm base_language.pm english.pm hungarian.pm italian.pm     \
         french.pm german.pm hebrew.pm portuguese.pm chinese.pm             \
         spanish.pm thai.pm russian.pm
do
  target="${CGIBINDIR}/${f}"
  if test -n "$PERLEXT"
  then
    case $target in
      *.pm) ;;
      *.pl) ;;
      *) target="${target}${PERLEXT}";;
    esac
  fi
  echo " ->$target"
  sed  -e "s|@PERL@|$PERL|g" \
       -e "s|@CGIBINDIR@|$CGIBINDIR|g"\
       -e "s|@PROTO@|$PROTO|g" \
       -e "s|@THISHOST@|$THISHOST|g" \
       -e "s|@CIVSDATADIR@|$CIVSDATADIR|g" \
       -e "s|@CIVSBINURL@|$CIVSBINURL|g" \
       -e "s|@CIVSURL@|$CIVSURL|g" \
       -e "s|@CIVSHOME@|$CIVSHOME|g" \
       -e "s|@SUPERVISOR@|$SUPERVISOR|g" \
       -e "s|@ADMIN_KEY@|$ADMIN_KEY|g" \
       -e "s|@SMTP_HOST@|$SMTP_HOST|g" \
       -e "s|@SMTP_PORT@|$SMTP_PORT|g" \
       -e "s|@SMTP_USE_SSL@|$SMTP_USE_SSL|g" \
       -e "s|@SMTP_STARTTLS@|$SMTP_STARTTLS|g" \
       -e "s|@SMTP_AUTH_USER@|$SMTP_AUTH_USER|g" \
       -e "s|@SMTP_AUTH_PASSWD@|$SMTP_AUTH_PASSWD|g" \
       -e "s|@AUTH_SENDER@|$AUTH_SENDER|g" \
       -e "s|@LOCALDEBUG@|$LOCALDEBUG|g" \
       -e "s|@ADDTOPATH@|$ADDTOPATH|g" \
       -e "s|@PERLEXT@|$PERLEXT|g" \
       -e "s|@USING_ISA@|$USING_ISA|g" \
       -e "s|@FILTER_TAGS@|$FILTER_TAGS|g" \
       -e "s|@MAX_VOTER_ADD@|$MAX_VOTER_ADD|g" \
       -e "s|@MAX_EMAIL_LOAD@|$MAX_EMAIL_LOAD|g" \
       -e "s|@MAX_IMAGE_SIZE@|$MAX_IMAGE_SIZE|g" \
       -e "s|@LOG_HOME_VISITS@|$LOG_HOME_VISITS|g" \
       -e "s|@SUGGESTION_BOX@|$SUGGESTION_BOX|g" \
       -e "s|@DONATE_URL@|$DONATE_URL|g" \
       < "cgi-bin/$f" > "$target"
  chmod a+x "$target"
done
mkdir -p "${HTMLDIR}/images"
for f in images/{check123b,sample-ballot,vertstrip,check-civs}.png;
do
  dest="${HTMLDIR}/${f}"
  cp "$f" "$dest"
done
echo; echo

if [ ! -s "$CIVSDATADIR/private_host_id" ]; then
  echo "*********************************************";
  echo "                 WARNING                     ";
  echo "*********************************************";
  echo "";
  echo "No private key exists for the server!";
  echo "";
  echo "Creating a private key using the openssl pseudo-random number";
  echo "generator.  If you want more randomness than this, you will";
  echo "need to create your own key.  See the INSTALL file for more";
  echo "information."
  echo "";
  openssl rand -base64 -out "$CIVSDATADIR/private_host_id" 32;
  echo "*********************************************";
fi

if [ ! -s "$CIVSDATADIR/nonce_seed" ]; then
  echo "Seeding the CIVS nonce generator.";
  openssl rand -hex -out "$CIVSDATADIR/nonce_seed" 32;
fi

touch "$CIVSDATADIR/nonce_seed" "$CIVSDATADIR/log" "$CIVSDATADIR/cgi-log" "$CIVSDATADIR/global_lock"
chmod ugo+w "$CIVSDATADIR/nonce_seed" "$CIVSDATADIR/log" "$CIVSDATADIR/cgi-log" "$CIVSDATADIR/global_lock"

if [ -e gettimeofday.exe ]; then
  cp gettimeofday.exe "$CIVSDATADIR/gettimeofday.exe";
else
  cp gettimeofday "$CIVSDATADIR/gettimeofday"
fi
if [ -e timeout.exe ]; then
  cp timeout.exe "$CIVSDATADIR/timeout.exe";
else
  cp timeout "$CIVSDATADIR/timeout"
fi
if [ -e lockserv.exe ]; then
  cp lockserv.exe "$CIVSDATADIR/lockserv.exe";
else
  cp lockserv "$CIVSDATADIR/lockserv"
fi

echo "Install completed.  Check for any errors reported above.";
